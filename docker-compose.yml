services:
  php:
    container_name: regmel-php
    build:
      context: ./
      dockerfile: ./docker/php/Dockerfile
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
      - mongo
    tty: true
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - regmel_network

  nginx:
    container_name: regmel-nginx
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - php
    tty: true
    ports:
      - '8080:80'
      - '443:443'
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - regmel_network

  postgres:
    container_name: regmel-postgres
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    tty: true
    volumes:
      - regmel_psql_data:/var/lib/postgresql/data:rw
    networks:
      - regmel_network
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-regmel_psql}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-regmel}

  mongo:
    container_name: regmel-mongo
    image: mongo:7.0
    tty: true
    restart: unless-stopped
    networks:
      - regmel_network
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-regmel_nosql}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password}
      MONGODB_DB: ${MONGODB_DB:-regmel_nosql}
      MONGODB_USER: ${MONGODB_USER:-regmel}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD:-password}
    volumes:
      - ./docker/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

  cypress:
    container_name: regmel-cypress
    image: cypress/included:13.10.0
    profiles:
      - tests
    environment:
      - CYPRESS_BASE_URL=http://nginx
      - :80
    depends_on:
      - nginx
      - php
    entrypoint: [ '/bin/sh', '-c' ]
    command: ['npm install && cypress run']
    volumes:
      - .:/cy
    working_dir: /cy
    networks:
      - regmel_network

  mailer:
    container_name: regmel-mailer
    image: axllent/mailpit
    ports:
      - '1025'
      - '32770:8025'
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - regmel_network

  worker:
    build:
      context: ./
      dockerfile: ./docker/worker/Dockerfile
    volumes:
      - .:/var/www
    environment:
      - MESSENGER_TRANSPORT_DSN=redis://redis:6379/messages
    depends_on:
      - redis
      - php
    networks:
      - regmel_network

  redis:
    container_name: regmel-redis
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - regmel_redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 3
    networks:
      - regmel_network

networks:
  regmel_network:
    driver: bridge

volumes:
  regmel_psql_data:
  regmel_redis_data:
